<!doctype html> 
<html lang="en"> 
<head> 
  <meta charset="UTF-8" />
    <title>Phaser - Making your first game, part 9</title>
    <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.4/themes/smoothness/jquery-ui.css">
      <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
      <script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
      <script>
      $(function() {
        $( "#accordion" ).accordion();
      });
      </script>
</head>
</head>
<body>
<!-- <div id="container"> --> 
<!-- start sidebar for resume. this uses accordion from jQueryUI -->
<div id="accordion">
<!--start Portfolio content -->      
  <h3>Portfolio</h3>
      <div>
        <li><a href="#">Item 1</a></li>
            <ul>
                <li><a href="#">Title</a></li>
                <li><a href="#">Description</a></li>
                <li><a href="#">Image</a></li>
                <li><a href="#">Link</a></li>
            </ul>
        <ul>        
        <li><a href="#">Item 2</a></li>
            <ul>
                <li><a href="#">Title</a></li>
                <li><a href="#">Description</a></li>
                <li><a href="#">Image</a></li>
                <li><a href="#">Link</a></li>
            </ul>
        <ul>         
<!--start Career/Experience content -->  
  <h3>Experience</h3>
      <div>
        <ul>
            <li><a href="#">Job Title 1</a></li>
                <ul>
                    <li><a href="#">Job Description</a></li>
                    <li><a href="#">Company</a></li>
                    <li><a href="#">Start Date</a></li>
                    <li><a href="#">End Date</a></li>                   

                </ul>
            <li><a href="#">Job Title 2</a></li>
                <ul>
                    <li><a href="#">Job Description</a></li>
                    <li><a href="#">Company</a></li>
                    <li><a href="#">Start Date</a></li>
                    <li><a href="#">End Date</a></li>                   

                </ul>
            <li><a href="#">Job Title 3</a></li>
                <ul>
                    <li><a href="#">Job Description</a></li>
                    <li><a href="#">Company</a></li>
                    <li><a href="#">Start Date</a></li>
                    <li><a href="#">End Date</a></li>                   

                </ul>             
            </ul>
      </div>  
  <h3>Education</h3>
       <div>
         <ul>
            <li>
                <a href="#">Institution 1</a>
            </li>
                <ul>
                    <li><a href="#">Course Name</a></li>
                    <li><a href="#">Start Date</a></li>
                    <li><a href="#">End Date</a></li>                   

                </ul>
            <li>
                <a href="#">Institution 2</a>
            </li>
                <ul>
                    <li><a href="#">Course Name</a></li>
                    <li><a href="#">Start Date</a></li>
                    <li><a href="#">End Date</a></li>
                </ul>                   
         </ul>
        </div>              
  <h3>Contact</h3>
       <div>
        <ul>
            <li><a href="#">Github</a></li>
            <li><a href="#">LinkedIn</a></li>
            <li><a href="#">Website</a></li>
            <li><a href="#">Twitter</a></li>
        </ul>         
      </div>
</div><!-- end div accordion and sidebar resume -->          

    <!-- canvas js -->    
    <script type="text/javascript">

    var game = new Phaser.Game(800, 600, Phaser.AUTO, '', { preload: preload, create: create, update: update });

    function preload() {

        game.load.image('sky', '/assets/sky.png');
        game.load.image('ground', '/assets/platform.png');
        game.load.image('star', '/assets/star.png');
        game.load.spritesheet('dude', '/assets/dude.png', 32, 48);

    }

    var player;
    var platforms;
    var cursors;

    var stars;
    var score = 0;
    var scoreText;

    function create() {

        //  We're going to be using physics, so enable the Arcade Physics system
        game.physics.startSystem(Phaser.Physics.ARCADE);

        //  A simple background for our game
        game.add.sprite(0, 0, 'sky');

        //  The platforms group contains the ground and the 2 ledges we can jump on
        platforms = game.add.group();

        //  We will enable physics for any object that is created in this group
        platforms.enableBody = true;

        // Here we create the ground.
        var ground = platforms.create(0, game.world.height - 64, 'ground');

        //  Scale it to fit the width of the game (the original sprite is 400x32 in size)
        ground.scale.setTo(2, 2);

        //  This stops it from falling away when you jump on it
        ground.body.immovable = true;

        //  Now let's create two ledges
        var ledge = platforms.create(400, 400, 'ground');
        ledge.body.immovable = true;

        ledge = platforms.create(-150, 250, 'ground');
        ledge.body.immovable = true;

        // The player and its settings
        player = game.add.sprite(32, game.world.height - 150, 'dude');

        //  We need to enable physics on the player
        game.physics.arcade.enable(player);

        //  Player physics properties. Give the little guy a slight bounce.
        player.body.bounce.y = 0.2;
        player.body.gravity.y = 300;
        player.body.collideWorldBounds = true;

        //  Our two animations, walking left and right.
        player.animations.add('left', [0, 1, 2, 3], 10, true);
        player.animations.add('right', [5, 6, 7, 8], 10, true);

        //  Finally some stars to collect
        stars = game.add.group();

        //  We will enable physics for any star that is created in this group
        stars.enableBody = true;

        //  Here we'll create 12 of them evenly spaced apart
        for (var i = 0; i < 12; i++)
        {
            //  Create a star inside of the 'stars' group
            var star = stars.create(i * 70, 0, 'star');

            //  Let gravity do its thing
            star.body.gravity.y = 300;

            //  This just gives each star a slightly random bounce value
            star.body.bounce.y = 0.7 + Math.random() * 0.2;
        }

        //  The score
        scoreText = game.add.text(16, 16, 'score: 0', { fontSize: '32px', fill: '#000' });

        //  Our controls.
        cursors = game.input.keyboard.createCursorKeys();
        
    }

    function update() {

        //  Collide the player and the stars with the platforms
        game.physics.arcade.collide(player, platforms);
        game.physics.arcade.collide(stars, platforms);

        //  Checks to see if the player overlaps with any of the stars, if he does call the collectStar function
        game.physics.arcade.overlap(player, stars, collectStar, null, this);

        //  Reset the players velocity (movement)
        player.body.velocity.x = 0;

        if (cursors.left.isDown)
        {
            //  Move to the left
            player.body.velocity.x = -150;

            player.animations.play('left');
        }
        else if (cursors.right.isDown)
        {
            //  Move to the right
            player.body.velocity.x = 150;

            player.animations.play('right');
        }
        else
        {
            //  Stand still
            player.animations.stop();

            player.frame = 4;
        }
        
        //  Allow the player to jump if they are touching the ground.
        if (cursors.up.isDown && player.body.touching.down)
        {
            player.body.velocity.y = -350;
        }

    }

    function collectStar (player, star) {
        
        // Removes the star from the screen
        star.kill();

        //  Add and update the score
        score += 10;
        scoreText.text = 'Score: ' + score;

    }

    </script>
<!-- </div>end div container   -->  
</body>
</html>